/* SPDX-License-Identifier: GPL-2.0-only */

#ifndef MAINBOARD_GPIO_H
#define MAINBOARD_GPIO_H

#include <soc/gpe.h>
#include <soc/gpio.h>

#ifndef __ACPI__

#define PAD_CFG_NC(pad) PAD_NC(pad, NONE)

/* Early pad configuration in romstage. */
static const struct pad_config early_gpio_table[] = {
	PAD_CFG_NF(GPP_C20, NONE, DEEP, NF1), // UART2_RXD
	PAD_CFG_NF(GPP_C21, NONE, DEEP, NF1), // UART2_TXD
	PAD_CFG_NC(GPP_C22), // NC
	PAD_CFG_NC(GPP_C23), // NC
};

/* Pad configuration in ramstage. */
static const struct pad_config gpio_table[] = {
	/* ------- GPIO Group GPD ------- */
	PAD_CFG_NC(GPD0), // PM_BATLOW#
	PAD_CFG_NF(GPD1, NATIVE, DEEP, NF1), // AC_PRESENT
	PAD_CFG_NC(GPD2), // NC
	PAD_CFG_NF(GPD3, UP_20K, DEEP, NF1), // PWR_BTN#
	PAD_CFG_NF(GPD4, NONE, DEEP, NF1), // SUSB#_PCH
	PAD_CFG_NF(GPD5, NONE, DEEP, NF1), // SUSC#_PCH
	PAD_CFG_NF(GPD6, NONE, DEEP, NF1), // SLP_A#
	PAD_CFG_NC(GPD7), // NC
	PAD_CFG_NF(GPD8, NONE, DEEP, NF1), // SUS_CLK
	PAD_CFG_NC(GPD9), // GPD9_RTD3
	PAD_CFG_NF(GPD10, NONE, DEEP, NF1), // NC
	PAD_CFG_NC(GPD11), // NC

	/* ------- GPIO Group GPP_A ------- */
	PAD_CFG_NF(GPP_A0, NONE, DEEP, NF1), // SB_KBCRST#
	PAD_CFG_NF(GPP_A1, NATIVE, DEEP, NF1), // LPC_AD0
	PAD_CFG_NF(GPP_A2, NATIVE, DEEP, NF1), // LPC_AD1
	PAD_CFG_NF(GPP_A3, NATIVE, DEEP, NF1), // LPC_AD2
	PAD_CFG_NF(GPP_A4, NATIVE, DEEP, NF1), // LPC_AD3
	PAD_CFG_NF(GPP_A5, NONE, DEEP, NF1), // LPC_FRAME#
	PAD_CFG_NF(GPP_A6, NONE, DEEP, NF1), // SERIRQ with pull up
	PAD_CFG_NC(GPP_A7), // TPM_PIRQ#
	PAD_CFG_NF(GPP_A8, NONE, DEEP, NF1), // PM_CLKRUN# with pull-up
	PAD_CFG_NF(GPP_A9, DN_20K, DEEP, NF1), // PCLK_KBC
	PAD_CFG_NF(GPP_A10, DN_20K, DEEP, NF1), // NC
	PAD_CFG_NC(GPP_A11), // NC
	PAD_CFG_NC(GPP_A12), // PCH_GPP_A12
	PAD_CFG_NF(GPP_A13, NONE, DEEP, NF1), // SUSWARN#
	PAD_CFG_NF(GPP_A14, NONE, DEEP, NF1), // NC
	PAD_CFG_NF(GPP_A15, UP_20K, DEEP, NF1), // SUS_PWR_ACK
	PAD_CFG_NC(GPP_A16), // NC
	PAD_CFG_NC(GPP_A17), // LIGHT_KB_DET#
	PAD_CFG_NC(GPP_A18), // NC
	PAD_CFG_GPO(GPP_A19, 1, DEEP), // SATA_PWR_EN
	PAD_CFG_NC(GPP_A20), // NC
	PAD_CFG_NC(GPP_A21), // NC
	PAD_CFG_TERM_GPO(GPP_A22, 0, NONE, DEEP), // PS8338B_SW
	PAD_CFG_NC(GPP_A23), // PS8338B_PCH

	/* ------- GPIO Group GPP_B ------- */
	PAD_CFG_NC(GPP_B0), // CORE_VID0
	PAD_CFG_NC(GPP_B1), // CORE_VID1
	PAD_CFG_NC(GPP_B2), // CNVI_WAKE#
	PAD_CFG_NC(GPP_B3), // NC
	PAD_CFG_NC(GPP_B4), // NC
	PAD_CFG_NC(GPP_B5), // NC
	PAD_CFG_NC(GPP_B6), // NC
	PAD_CFG_NF(GPP_B7, NONE, DEEP, NF1), // WLAN_CLKREQ#
	PAD_CFG_NF(GPP_B8, NONE, DEEP, NF1), // LAN_CLKREQ#
	PAD_CFG_NF(GPP_B9, NONE, DEEP, NF1), // TBT_CLKREQ#
	PAD_CFG_NF(GPP_B10, NONE, DEEP, NF1), // SSD_CLKREQ#
	PAD_CFG_NC(GPP_B11), // EXT_PWR_GATE#
	PAD_CFG_NF(GPP_B12, NONE, DEEP, NF1), // SLP_S0#
	PAD_CFG_NF(GPP_B13, NONE, DEEP, NF1), // PLT_RST#
	PAD_CFG_NF(GPP_B14, NONE, DEEP, NF1), // PCH_SPKR
	PAD_CFG_NC(GPP_B15), // NC
	PAD_CFG_NC(GPP_B16), // PCH_GPP_B16
	PAD_CFG_NC(GPP_B17), // PCH_GPP_B17
	PAD_CFG_NC(GPP_B18), // PCH_GPP_B18 - strap for disabling no reboot mode
	PAD_CFG_NC(GPP_B19), // NC
	PAD_CFG_NC(GPP_B20), // NC
	PAD_CFG_NC(GPP_B21), // NC
	PAD_CFG_NC(GPP_B22), // PCH_GPP_B22
	PAD_CFG_NC(GPP_B23), // NC

	/* ------- GPIO Group GPP_C ------- */
	PAD_CFG_NF(GPP_C0, NONE, DEEP, NF1), // SMB_CLK_DDR
	PAD_CFG_NF(GPP_C1, NONE, DEEP, NF1), // SMB_DAT_DDR
	PAD_CFG_NC(GPP_C2), // PCH_GPP_C2 with pull-up
	PAD_CFG_NC(GPP_C3), // NC
	PAD_CFG_NC(GPP_C4), // NC
	PAD_CFG_NC(GPP_C5), // NC
	PAD_CFG_NC(GPP_C6), // LAN_WAKEUP#
	PAD_CFG_NC(GPP_C7), // NC
	PAD_CFG_NC(GPP_C8), // NC
	_PAD_CFG_STRUCT(GPP_C9, 0x82880100, 0x3000), // TBCIO_PLUG_EVENT
	PAD_CFG_TERM_GPO(GPP_C10, 0, NONE, PLTRST), // TBT_FRC_PWR
	PAD_CFG_NC(GPP_C11), // NC
	PAD_CFG_TERM_GPO(GPP_C12, 1, NONE, PLTRST), // GPP_C12_RTD3
	PAD_CFG_TERM_GPO(GPP_C13, 1, NONE, PLTRST), // SSD_PWR_DN#
	PAD_CFG_TERM_GPO(GPP_C14, 0, NONE, PLTRST), // TBTA_HRESET
	PAD_CFG_TERM_GPO(GPP_C15, 1, UP_20K, PLTRST), // TBT_PERST_N
	PAD_CFG_NF(GPP_C16, NONE, DEEP, NF1), // T_SDA
	PAD_CFG_NF(GPP_C17, NONE, DEEP, NF1), // T_SCL
	PAD_CFG_NC(GPP_C18), // NC
	PAD_CFG_NC(GPP_C19), // SWI
	PAD_CFG_NF(GPP_C20, NONE, DEEP, NF1), // UART2_RXD
	PAD_CFG_NF(GPP_C21, NONE, DEEP, NF1), // UART2_TXD
	PAD_CFG_NC(GPP_C22), // NC
	PAD_CFG_GPI_APIC(GPP_C23, NONE, PLTRST, EDGE_SINGLE, INVERT), // TP_ATTN#

	/* ------- GPIO Group GPP_D ------- */
	PAD_CFG_NC(GPP_D0), // NC
	PAD_CFG_NC(GPP_D1), // NC
	PAD_CFG_NC(GPP_D2), // NC
	PAD_CFG_NC(GPP_D3), // NC
	PAD_CFG_NC(GPP_D4), // NC
	PAD_CFG_NC(GPP_D5), // NC
	PAD_CFG_NC(GPP_D6), // NC
	PAD_CFG_NC(GPP_D7), // NC
	PAD_CFG_TERM_GPO(GPP_D8, 1, NONE, DEEP), // SB_BLON
	_PAD_CFG_STRUCT(GPP_D9, 0x40880100, 0x0000), // SWI#
	PAD_CFG_NC(GPP_D10), // NC
	_PAD_CFG_STRUCT(GPP_D11, 0x40880100, 0x3000), // RTD3_PCIE_WAKE#
	PAD_CFG_NC(GPP_D12), // PCH_GPP_D12
	PAD_CFG_NC(GPP_D13), // NC
	PAD_CFG_NC(GPP_D14), // NC
	PAD_CFG_NC(GPP_D15), // NC
	PAD_CFG_TERM_GPO(GPP_D16, 1, NONE, PWROK), // RTD3_3G_PW R_EN
	PAD_CFG_NC(GPP_D17), // NC
	PAD_CFG_NC(GPP_D18), // NC
	PAD_CFG_NF(GPP_D19, NONE, DEEP, NF1), // GPPC_DMIC_CLK
	PAD_CFG_NF(GPP_D20, NONE, DEEP, NF1), // GPPC_DMIC_DATA
	PAD_CFG_NC(GPP_D21), // TPM_DET#
	PAD_CFG_NC(GPP_D22), // TPM_TCM_Detect
	PAD_CFG_NC(GPP_D23), // NC

	/* ------- GPIO Group GPP_E ------- */
	PAD_CFG_NC(GPP_E0), // PCH_GPP_E0 with pull-up
	PAD_CFG_NC(GPP_E1), // SATA_ODD_PRSNT#
	PAD_CFG_NF(GPP_E2, UP_20K, DEEP, NF1), // SATAGP2
	PAD_CFG_NC(GPP_E3), // NC
	PAD_CFG_NC(GPP_E4), // NC
	PAD_CFG_NC(GPP_E5), // NC
	PAD_CFG_NF(GPP_E6, NONE, DEEP, NF1), // DEVSLP2
	PAD_CFG_NC(GPP_E7), // NC
	PAD_CFG_NF(GPP_E8, NONE, DEEP, NF1), // PCH_SATAHDD_LED#
	PAD_CFG_NC(GPP_E9), // GP_BSSB_CLK
	PAD_CFG_NC(GPP_E10), // GPP_E10
	PAD_CFG_NC(GPP_E11), // GPP_E11
	PAD_CFG_NC(GPP_E12), // USB_OC#78
	PAD_CFG_NF(GPP_E13, NONE, DEEP, NF1), // MUX_HPD
	PAD_CFG_NF(GPP_E14, NONE, DEEP, NF1), // HDMI_HPD
	_PAD_CFG_STRUCT(GPP_E15, 0x42840100, 0x0), // SMI#
	_PAD_CFG_STRUCT(GPP_E16, 0x80880100, 0x0000), // SCI#
	PAD_CFG_NF(GPP_E17, NONE, DEEP, NF1), // EDP_HPD
	PAD_CFG_NF(GPP_E18, NONE, DEEP, NF1), // MDP_CTRLCLK
	PAD_CFG_NF(GPP_E19, NONE, DEEP, NF1), // MDP_CTRLDATA
	PAD_CFG_NF(GPP_E20, NONE, DEEP, NF1), // HDMI_CTRLCLK
	PAD_CFG_NF(GPP_E21, NONE, DEEP, NF1), // HDMI_CTRLDATA
	PAD_CFG_NC(GPP_E22), // NC
	PAD_CFG_NC(GPP_E23), // NC

	/* ------- GPIO Group GPP_F ------- */
	PAD_CFG_NF(GPP_F0, NONE, DEEP, NF1), // CNVI_GNSS_PA_BLANKING
	PAD_CFG_NC(GPP_F1), // NC
	PAD_CFG_NC(GPP_F2), // NC
	PAD_CFG_NC(GPP_F3), // NC
	PAD_CFG_NF(GPP_F4, NONE, DEEP, NF1), // CNVI_BRI_DT
	PAD_CFG_NF(GPP_F5, UP_20K, DEEP, NF1), // CNVI_BRI_RSP
	PAD_CFG_NF(GPP_F6, NONE, DEEP, NF1), // CNVI_RGI_DT
	PAD_CFG_NF(GPP_F7, UP_20K, DEEP, NF1), // CNVI_RGI_RSP
	PAD_CFG_NF(GPP_F8, NONE, DEEP, NF1), // CNVI_MFUART2_RXD
	PAD_CFG_NF(GPP_F9, NONE, DEEP, NF1), // CNVI_MFUART2_TXD
	PAD_CFG_NC(GPP_F10), // NC
	PAD_CFG_NC(GPP_F11), // NC
	PAD_CFG_NC(GPP_F12), // NC
	PAD_CFG_NC(GPP_F13), // NC
	PAD_CFG_NC(GPP_F14), // NC
	PAD_CFG_NC(GPP_F15), // NC
	PAD_CFG_NC(GPP_F16), // NC
	PAD_CFG_NC(GPP_F17), // NC
	PAD_CFG_NC(GPP_F18), // NC
	PAD_CFG_NC(GPP_F19), // NC
	PAD_CFG_NC(GPP_F20), // NC
	PAD_CFG_NC(GPP_F21), // NC
	PAD_CFG_NC(GPP_F22), // NC
	PAD_CFG_GPI(GPP_F23, DN_20K, DEEP), // A4WP_PRESENT

	/* ------- GPIO Group GPP_G ------- */
	PAD_CFG_NC(GPP_G0), // EDP_DET
	PAD_CFG_NC(GPP_G1), // NC
	PAD_CFG_NC(GPP_G2), // NC
	PAD_CFG_NC(GPP_G3), // ASM1543_I_SEL0
	PAD_CFG_NC(GPP_G4), // ASM1543_I_SEL1
	PAD_CFG_NC(GPP_G5), // BOARD_ID
	PAD_CFG_NC(GPP_G6), // NC
	PAD_CFG_NC(GPP_G7), // TBT_Detect

	/* ------- GPIO Group GPP_H ------- */
	PAD_CFG_NC(GPP_H0), // NC
	PAD_CFG_NF(GPP_H1, NONE, DEEP, NF3), // CNVI_RST#
	PAD_CFG_NF(GPP_H2, NONE, DEEP, NF3), // CNVI_CLKREQ
	PAD_CFG_NC(GPP_H3), // NC
	PAD_CFG_NC(GPP_H4), // T23
	PAD_CFG_NC(GPP_H5), // T22
	PAD_CFG_NC(GPP_H6), // NC
	PAD_CFG_NC(GPP_H7), // NC
	PAD_CFG_NC(GPP_H8), // NC
	PAD_CFG_NC(GPP_H9), // NC
	PAD_CFG_NC(GPP_H10), // NC
	PAD_CFG_NC(GPP_H11), // NC
	PAD_CFG_NC(GPP_H12), // NC
	PAD_CFG_NC(GPP_H13), // NC
	PAD_CFG_NC(GPP_H14), // G_INT1
	PAD_CFG_NC(GPP_H15), // NC
	PAD_CFG_NC(GPP_H16), // NC
	PAD_CFG_NC(GPP_H17), // NC
	PAD_CFG_NF(GPP_H18, NONE, DEEP, NF1), // CPU_C10_GATE#
	PAD_CFG_NC(GPP_H19), // NC
	PAD_CFG_NC(GPP_H20), // NC
	PAD_CFG_NC(GPP_H21), // GPPC_H21
	PAD_NC(GPP_H22, NONE), // TBT_RTD3_PWR_EN_R
	PAD_CFG_NC(GPP_H23), // NC, WIGIG_PEWAKE
};

#endif

#endif
